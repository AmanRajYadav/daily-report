// 🎨 MASTERPIECE HTML GENERATOR - Creates individual report files using the template system
// This code processes ALL incoming items and finds the SUMMARY data to create student-specific HTML files

const outputItems = []; // CHANGED: Create an array to hold the results

// CHANGED: Loop through every item coming into the node
for (const item of $input.all()) {
  const inputData = item.json;

  // CHANGED: Skip to the next item if it's not a summary
  if (inputData.type !== 'summary') {
    continue;
  }

  // --- ALL YOUR ORIGINAL CODE FROM HERE IS UNTOUCHED ---

  // Extract the data
  const summaryData = inputData.summary;
  const timestamp = inputData.timestamp;
  const metadata = inputData.metadata;

  // Build student info from metadata
  const studentInfo = {
      student_name: metadata.student_name || 'Student',
      student_id: metadata.student_id || `student_${Date.now()}`,
      student_id_mapping: metadata.student_id_mapping || null
  };

  console.log('Processing summary for:', studentInfo.student_name);
  console.log('Subject:', summaryData.main_content?.subject_title);

  // Helper functions
  function formatDate(dateString) {
    const options = { year: 'numeric', month: 'long', day: 'numeric', timeZone: 'Asia/Kolkata' };
    return new Date(dateString).toLocaleDateString('en-IN', options);
  }

  function formatTime() {
    const options = { hour: '2-digit', minute: '2-digit', timeZone: 'Asia/Kolkata', hour12: true };
    return new Date().toLocaleTimeString('en-IN', options).toUpperCase();
  }

  // Generate unique filename with timestamp
  const dateStr = new Date(timestamp).toISOString().split('T')[0];
  const timeStr = new Date(timestamp).toISOString().split('T')[1].split('.')[0].replace(/:/g, '-');
  const uniqueFilename = `${studentInfo.student_id || 'student'}-${dateStr}-${timeStr}`;

  // Generate the GitHub Pages URL
  const githubPagesUrl = `https://amanrajyadav.github.io/daily-report/reports/${uniqueFilename}.html`;

  // Calculate student color hue based on name
  const studentHue = ((studentInfo.student_name?.charCodeAt(0) || 5) * 3.6) % 360;

  // Determine subject creature
  function getSubjectCreature(subjectTitle) {
    const subject = subjectTitle?.toLowerCase() || '';
    if (subject.includes('math')) return 'math-dragon';
    if (subject.includes('science')) return 'science-owl';
    if (subject.includes('english')) return 'english-butterfly';
    if (subject.includes('history')) return 'history-lion';
    if (subject.includes('art')) return 'art-peacock';
    return 'star';
  }

  // Your masterpiece template
  const reportTemplate = `<!DOCTYPE html>
<html lang="en" data-theme="minimal">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no">
    <title>{{STUDENT_NAME}} · Learning Universe</title>
    <meta name="description" content="A magical learning journey">
    
    <link rel="preload" href="../assets/sounds/ambient/morning-forest.mp3" as="audio">
    <link rel="preload" href="../assets/sprites/creatures/{{SUBJECT_CREATURE}}.svg" as="image">
    
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&family=EB+Garamond:ital,wght@0,400;0,600;1,400&family=Caveat:wght@400;700&display=swap" rel="stylesheet">
    
    <link rel="stylesheet" href="../assets/css/main.css">
    <link rel="stylesheet" href="../assets/css/themes/minimal.css" id="theme-stylesheet">
    
    <style>
        /* Dynamic student color */
        :root {
            --student-hue: {{STUDENT_HUE}};
            --student-accent: hsl(var(--student-hue), 70%, 60%);
            --student-accent-soft: hsl(var(--student-hue), 60%, 95%);
        }
    </style>
</head>
<body>
    <div class="loading-screen" id="loadingScreen">
        <div class="loading-content">
            <div class="magic-circle">
                <svg viewBox="0 0 200 200">
                    <circle cx="100" cy="100" r="80" class="circle-outer" />
                    <circle cx="100" cy="100" r="60" class="circle-middle" />
                    <circle cx="100" cy="100" r="40" class="circle-inner" />
                </svg>
            </div>
            <p class="loading-text">Preparing your magical journey...</p>
        </div>
    </div>

    <button class="theme-toggle" id="themeToggle" aria-label="Toggle theme">
        <span class="theme-icon-minimal">✨</span>
        <span class="theme-icon-cosmic">🌙</span>
    </button>

    <div class="universe-container">
        <canvas id="magicCanvas"></canvas>
        
        <div class="parallax-layer" data-depth="0.1">
            <div class="clouds"></div>
        </div>
        <div class="parallax-layer" data-depth="0.3">
            <div class="floating-elements"></div>
        </div>
        <div class="parallax-layer" data-depth="0.5">
            <div class="fireflies"></div>
        </div>
        
        <div class="seasonal-overlay" id="seasonalOverlay"></div>
    </div>

    <div class="learning-tree-container">
        <div class="tree-stage" id="learningTree">
            </div>
        <div class="tree-info">
            <span class="visits-count">Visit #<span id="visitNumber">1</span></span>
            <span class="tree-stage-name" id="treeStageName">Seedling</span>
        </div>
    </div>

    <div class="animals-container" id="animalsContainer">
        </div>

    <div class="audio-controls">
        <button class="audio-ambient active" id="ambientToggle" aria-label="Toggle ambient sounds">
            <svg viewBox="0 0 24 24">
                <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 14.5v-9l6 4.5-6 4.5z"/>
            </svg>
        </button>
        <div class="volume-slider">
            <input type="range" id="volumeControl" min="0" max="100" value="50">
        </div>
    </div>

    <main class="content-wrapper">
        <section class="hero-section" id="heroSection">
            <div class="hero-particles" id="heroParticles"></div>
            
            <div class="date-badge floating">{{DATE}}</div>
            
            <h1 class="student-name magical-text">
                {{STUDENT_NAME}}
                <span class="name-sparkles"></span>
            </h1>
            
            <p class="hero-greeting">Welcome back to your learning universe</p>
            
            <div class="student-avatar-container">
                <div class="avatar-aura"></div>
                <div class="student-avatar" id="studentAvatar">
                    <div class="avatar-inner" data-initial="{{STUDENT_INITIAL}}"></div>
                </div>
            </div>
        </section>

        <section class="content-card floating-card" data-sound="page-turn" data-creature="star">
            <div class="card-background-effect"></div>
            
            <header class="card-header">
                <div class="section-icon animated-icon">
                    <svg viewBox="0 0 48 48">
                        <path class="icon-path" d="M24 4l5.5 11.1L42 17l-9 8.8L35.1 38 24 32.2 12.9 38 15 25.8 6 17l12.5-1.9z"/>
                    </svg>
                </div>
                <h2 class="section-title">Today's Reflection</h2>
            </header>
            
            <div class="card-content touchable" data-read-aloud="true">
                <p class="reflection-text">
                    {{GREETING_SECTION}}
                </p>
            </div>
            
            <div class="tap-hint">Tap to hear • Long press for Hindi</div>
        </section>

        <section class="content-card floating-card" data-sound="page-turn" data-creature="{{SUBJECT_CREATURE}}">
            <div class="card-background-effect"></div>
            
            <div class="subject-creature-container">
                <div class="creature-home" id="creatureHome">
                    </div>
            </div>
            
            <header class="card-header">
                <div class="section-icon animated-icon">
                    <svg viewBox="0 0 48 48">
                        <path class="icon-path" d="M4 6h8c2.2 0 4 1.8 4 4v28c0-1.7-1.3-3-3-3H4V6zm40 0h-8c-2.2 0-4 1.8-4 4v28c0-1.7 1.3-3 3-3h9V6z"/>
                    </svg>
                </div>
                <h2 class="section-title">What We Explored</h2>
            </header>
            
            <div class="subject-badge magical-badge">{{SUBJECT_TITLE}}</div>
            
            <div class="card-content touchable" data-read-aloud="true">
                <p class="learning-content">
                    {{DETAILED_CONTENT}}
                </p>
            </div>
        </section>

        {{ACTIVITY_SECTION}}

        {{PARENT_SECTION}}

        <section class="arcade-portal-section">
            <div class="portal-container">
                <div class="portal-rings">
                    <div class="ring ring-1"></div>
                    <div class="ring ring-2"></div>
                    <div class="ring ring-3"></div>
                </div>
                
                <a href="https://amanrajyadav.github.io/fluence-quiz/" class="arcade-button magical-button">
                    <span class="button-bg"></span>
                    <span class="button-text">Enter Learning Arcade</span>
                    <span class="button-icon">🎮</span>
                </a>
            </div>
        </section>
    </main>

    <div class="shake-overlay" id="shakeOverlay">
        <div class="stardust-container" id="stardustContainer"></div>
        <div class="shake-message">
            <h3>✨ Magic Unlocked! ✨</h3>
            <p>You found a hidden surprise!</p>
        </div>
    </div>

    <script src="../assets/js/universe.js"></script>
    <script src="../assets/js/creatures.js"></script>
    <script src="../assets/js/audio.js"></script>
    <script src="../assets/js/particles.js"></script>
    <script src="../assets/js/tree.js"></script>
    <script src="../assets/js/magic.js"></script>
    
    <script>
        // Initialize with student data
        window.STUDENT_DATA = {
            name: '{{STUDENT_NAME}}',
            id: '{{STUDENT_ID}}',
            hue: {{STUDENT_HUE}},
            subject: '{{SUBJECT_TITLE}}',
            visitCount: parseInt(localStorage.getItem('visits_{{STUDENT_ID}}') || '0') + 1
        };
        
        // Start the magic
        document.addEventListener('DOMContentLoaded', () => {
            Universe.init();
        });
    </script>
</body>
</html>`;

  // Generate activity section if exists
  const activitySection = summaryData.activity ? `
        <section class="content-card floating-card activity-card" data-sound="chime" data-creature="rocket">
            <div class="card-background-effect"></div>
            
            <header class="card-header">
                <div class="section-icon animated-icon">
                    <svg viewBox="0 0 48 48">
                        <circle cx="24" cy="24" r="20" class="clock-circle"/>
                        <path class="clock-hand" d="M24 12v12l8 4"/>
                    </svg>
                </div>
                <h2 class="section-title">Your Mission</h2>
            </header>
            
            <div class="mission-name">${summaryData.activity.activity_name || 'Practice Activity'}</div>
            
            <div class="card-content touchable" data-read-aloud="true">
                <div class="mission-description">
                    <p>${summaryData.activity.task_description || 'A fun challenge to reinforce what we learned today.'}</p>
                </div>
                
                <div class="mission-motivation">
                    <span class="sparkle-text">✨ Why it's amazing:</span>
                    <p>${summaryData.activity.why_its_cool || 'This helps you apply your knowledge in creative ways.'}</p>
                </div>
            </div>
            
            <div class="hidden-treasure" id="hiddenTreasure">
                <span class="treasure-emoji">🎁</span>
                <p class="treasure-message">Secret discovered! You're amazing!</p>
            </div>
        </section>` : '';

  // Generate parent section if exists
  const parentSection = summaryData.parent_report ? `
        <section class="content-card floating-card parent-card" data-sound="notification">
            <div class="card-background-effect"></div>
            
            <header class="card-header">
                <div class="section-icon animated-icon">
                    <svg viewBox="0 0 48 48">
                        <path d="M31 28v-4c0-3.3-2.7-6-6-6h-10c-3.3 0-6 2.7-6 6v4"/>
                        <circle cx="20" cy="10" r="6"/>
                        <path d="M39 28v-4c0-2.8-1.9-5.1-4.5-5.8"/>
                        <path d="M33 4.2c2.6.7 4.5 3 4.5 5.8s-1.9 5.1-4.5 5.8"/>
                    </svg>
                </div>
                <h2 class="section-title">Family Update</h2>
            </header>
            
            <div class="parent-report-grid">
                <div class="report-item">
                    <h3 class="report-label">Today's Focus</h3>
                    <p>${summaryData.parent_report.class_focus || 'Building foundational skills'}</p>
                </div>
                
                <div class="report-item">
                    <h3 class="report-label">Progress Made</h3>
                    <p>${summaryData.parent_report.content_covered || 'Steady improvement in key areas'}</p>
                </div>
                
                ${summaryData.parent_report.homework_assignment ? `
                <div class="report-item">
                    <h3 class="report-label">Home Practice</h3>
                    <p>${summaryData.parent_report.homework_assignment}</p>
                </div>
                ` : ''}
                
                ${summaryData.parent_report.additional_notes ? `
                <div class="report-item">
                    <h3 class="report-label">Special Notes</h3>
                    <p>${summaryData.parent_report.additional_notes}</p>
                </div>
                ` : ''}
            </div>
        </section>` : '';

  // Process the template
  let finalHtml = reportTemplate
    // Student info
    .replace(/{{STUDENT_NAME}}/g, studentInfo.student_name || 'Dear Student')
    .replace(/{{STUDENT_ID}}/g, studentInfo.student_id || 'student')
    .replace(/{{STUDENT_HUE}}/g, studentHue)
    .replace(/{{STUDENT_INITIAL}}/g, (studentInfo.student_name || 'S').charAt(0).toUpperCase())
    
    // Date and time
    .replace(/{{DATE}}/g, formatDate(timestamp))
    
    // Subject info
    .replace(/{{SUBJECT_TITLE}}/g, summaryData.main_content?.subject_title || 'Today\'s Topic')
    .replace(/{{SUBJECT_CREATURE}}/g, getSubjectCreature(summaryData.main_content?.subject_title))
    
    // Content
    .replace(/{{GREETING_SECTION}}/g, summaryData.greeting_section || 'You made wonderful progress today. Every step forward is a victory worth celebrating.')
    .replace(/{{DETAILED_CONTENT}}/g, summaryData.main_content?.detailed_content || 'We discovered new concepts and expanded our understanding of the world around us.')
    
    // Sections
    .replace(/{{ACTIVITY_SECTION}}/g, activitySection)
    .replace(/{{PARENT_SECTION}}/g, parentSection);

  // CHANGED: Push the final object into the results array
  outputItems.push({
    json: {
      // HTML content
      finalHtml: finalHtml,
      
      // File info for GitHub
      filename: `reports/${uniqueFilename}.html`,
      
      // Student info
      student_info: studentInfo,
      timestamp: timestamp,
      
      // URL for WhatsApp
      github_pages_url: githubPagesUrl,
      summary: summaryData,
      
      // Metadata
      type: 'masterpiece_html_ready',
      file_info: {
        repo: 'daily-report',
        path: `reports/${uniqueFilename}.html`,
        url: githubPagesUrl,
        size: finalHtml.length,
        unique_filename: uniqueFilename,
        theme: 'masterpiece'
      },
      
      // Parent phone from metadata
      parent_phone: metadata.parent_phone || metadata.phone_number || null
    }
  });
}

return outputItems;